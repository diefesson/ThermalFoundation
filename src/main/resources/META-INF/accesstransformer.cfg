# 1.20.x
# CoFH Master AT List

public net.minecraft.client.gui.components.ChatComponent addMessage(Lnet/minecraft/network/chat/Component;)V # addMessage
public net.minecraft.client.gui.components.ChatComponent addMessage(Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/MessageSignature;Lnet/minecraft/client/GuiMessageTag;)V # addMessage
public net.minecraft.client.gui.components.ChatComponent addMessage(Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/MessageSignature;ILnet/minecraft/client/GuiMessageTag;Z)V # addMessage

public net.minecraft.client.multiplayer.MultiPlayerGameMode destroyProgress # destroyProgress

public net.minecraft.client.renderer.LevelRenderer capturedFrustum # capturedFrustum
public net.minecraft.client.renderer.LevelRenderer frustumPos # frustumPos
public net.minecraft.client.renderer.LevelRenderer renderBuffers # renderBuffers
public net.minecraft.client.renderer.LevelRenderer renderHitOutline(Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;DDDLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V # renderHitOutline

public net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer tridentModel # tridentModel
public net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer entityModelSet # entityModelSet

public net.minecraft.client.particle.ParticleEngine spriteSets # spriteSets

public net.minecraft.client.renderer.LevelRenderer addParticleInternal(Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)Lnet/minecraft/client/particle/Particle; # addParticleInternal
public net.minecraft.client.renderer.LevelRenderer addParticleInternal(Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)Lnet/minecraft/client/particle/Particle; # addParticleInternal

public net.minecraft.client.renderer.RenderStateShard * # All Fields
public net.minecraft.client.renderer.RenderStateShard$LineStateShard

public net.minecraft.data.loot.BlockLoot *() # All Methods

public net.minecraft.data.recipes.RecipeProvider saveRecipe(Lnet/minecraft/data/CachedOutput;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V # saveRecipe

public net.minecraft.server.level.ServerPlayer onEffectRemoved(Lnet/minecraft/world/effect/MobEffectInstance;)V # onEffectRemoved
public net.minecraft.server.level.ServerPlayer onEffectUpdated(Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V # onEffectUpdated
public net.minecraft.server.level.ServerPlayer onEffectAdded(Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V # onEffectAdded

public net.minecraft.world.damagesource.DamageSources damageTypes # damageTypes
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; # source
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/damagesource/DamageSource; # source
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; # source

public net.minecraft.world.effect.MobEffectInstance hiddenEffect # hiddenEffect

public net.minecraft.world.entity.Entity dimensions # dimensions
public net.minecraft.world.entity.Entity remainingFireTicks # remainingFireTicks
public net.minecraft.world.entity.Entity level # level
public net.minecraft.world.entity.Entity yRot # yRot
public net.minecraft.world.entity.Entity xRot # xRot

public net.minecraft.world.entity.LivingEntity attackStrengthTicker # attackStrengthTicker
public net.minecraft.world.entity.LivingEntity autoSpinAttackTicks # autoSpinAttackTicks

public net.minecraft.world.entity.LivingEntity onEffectRemoved(Lnet/minecraft/world/effect/MobEffectInstance;)V # onEffectRemoved
public net.minecraft.world.entity.LivingEntity checkAutoSpinAttack(Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/AABB;)V # checkAutoSpinAttack
public net.minecraft.world.entity.LivingEntity onEffectUpdated(Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V # onEffectUpdated
public net.minecraft.world.entity.LivingEntity onEffectAdded(Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V # onEffectAdded
public net.minecraft.world.entity.LivingEntity removeEffectParticles()V # removeEffectParticles

public net.minecraft.world.entity.item.PrimedTnt owner # owner

public net.minecraft.world.entity.player.Player abilities # abilities
public net.minecraft.world.entity.player.Player inventory # inventory

public net.minecraft.world.entity.projectile.AbstractArrow * # All Fields
public net.minecraft.world.entity.projectile.AbstractArrow shouldFall()Z # shouldFall
public net.minecraft.world.entity.projectile.AbstractArrow startFalling()V # startFalling

public net.minecraft.world.entity.projectile.FishingHook * # All Fields
protected net.minecraft.world.entity.projectile.FishingHook <init>(Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;II)V # <init>
public net.minecraft.world.entity.projectile.FishingHook m_37136_(Lnet/minecraft/world/entity/player/Player;)Z #

public net.minecraft.world.entity.projectile.Projectile * # All Fields
public net.minecraft.world.entity.projectile.Projectile checkLeftOwner()Z # checkLeftOwner

protected net.minecraft.world.entity.vehicle.AbstractMinecart getDropItem()Lnet/minecraft/world/item/Item; # getDropItem

public net.minecraft.world.inventory.AbstractContainerMenu containerListeners # containerListeners

public net.minecraft.world.inventory.Slot slot # slot
public-f net.minecraft.world.inventory.Slot x # x
public-f net.minecraft.world.inventory.Slot y # y

public-f net.minecraft.world.item.AxeItem STRIPPABLES # STRIPPABLES

public net.minecraft.world.item.CrossbowItem getStartSound(I)Lnet/minecraft/sounds/SoundEvent; # getStartSound

public net.minecraft.world.item.alchemy.PotionBrewing POTION_MIXES # POTION_MIXES

public net.minecraft.world.item.context.UseOnContext getHitResult()Lnet/minecraft/world/phys/BlockHitResult; # getHitResult

public net.minecraft.world.item.crafting.AbstractCookingRecipe result # result

public net.minecraft.world.item.crafting.Ingredient * # All Fields
public net.minecraft.world.item.crafting.Ingredient m_43948_()V # dissolve

public net.minecraft.world.item.crafting.RecipeManager byType(Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/Map; # byType

public net.minecraft.world.item.crafting.ShapedRecipe * # All Fields
public net.minecraft.world.item.crafting.ShapelessRecipe * # All Fields

public-f net.minecraft.world.item.enchantment.Enchantment category # category

public net.minecraft.world.level.biome.Biome getTemperature(Lnet/minecraft/core/BlockPos;)F # getTemperature
public net.minecraft.world.level.biome.Biome getBiomeCategory()Lnet/minecraft/world/level/biome/Biome$BiomeCategory; # getBiomeCategory

public-f net.minecraft.world.level.block.CarvedPumpkinBlock PUMPKINS_PREDICATE # PUMPKINS_PREDICATE

public net.minecraft.world.level.block.Blocks *() # All Methods

public net.minecraft.world.level.block.ComposterBlock add(FLnet/minecraft/world/level/ItemLike;)V # add

public net.minecraft.world.level.block.GrowingPlantBlock growthDirection # growthDirection
public net.minecraft.world.level.block.GrowingPlantBlock getBodyBlock()Lnet/minecraft/world/level/block/Block; # getBodyBlock
public net.minecraft.world.level.block.GrowingPlantBodyBlock getBodyBlock()Lnet/minecraft/world/level/block/Block; # getBodyBlock
public net.minecraft.world.level.block.CaveVinesBlock getBodyBlock()Lnet/minecraft/world/level/block/Block; # getBodyBlock
public net.minecraft.world.level.block.WeepingVinesBlock getBodyBlock()Lnet/minecraft/world/level/block/Block; # getBodyBlock
public net.minecraft.world.level.block.TwistingVinesBlock getBodyBlock()Lnet/minecraft/world/level/block/Block; # getBodyBlock
public net.minecraft.world.level.block.KelpBlock getBodyBlock()Lnet/minecraft/world/level/block/Block; # getBodyBlock

public net.minecraft.world.level.block.FireBlock setFlammable(Lnet/minecraft/world/level/block/Block;II)V # setFlammable
public net.minecraft.world.level.block.FireBlock getStateForPlacement(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; # getStateForPlacement

public-f net.minecraft.world.level.block.entity.BlockEntityType validBlocks # validBlocks

public net.minecraft.world.level.lighting.LightEngine storage # storage
public net.minecraft.world.level.lighting.LightEngine enqueueDecrease(JJ)V # enqueueDecrease
public net.minecraft.world.level.lighting.LightEngine enqueueIncrease(JJ)V # enqueueIncrease
public net.minecraft.world.level.lighting.LightEngine getState(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; # getState
public net.minecraft.world.level.lighting.LightEngine isEmptyShape(Lnet/minecraft/world/level/block/state/BlockState;)Z # isEmptyShape
public net.minecraft.world.level.lighting.LevelLightEngine blockEngine # blockEngine
public net.minecraft.world.level.lighting.BlockLightEngine getEmission(JLnet/minecraft/world/level/block/state/BlockState;)I # getEmission
public net.minecraft.world.level.lighting.LayerLightSectionStorage storingLightForSection(J)Z # storingLightForSection
public net.minecraft.world.level.lighting.LayerLightSectionStorage getStoredLevel(J)I # getStoredLevel
public net.minecraft.world.level.lighting.LayerLightSectionStorage setStoredLevel(JI)V # setStoredLevel

public net.minecraft.world.level.material.Material$Builder flammable()Lnet/minecraft/world/level/material/Material$Builder; # flammable
public net.minecraft.world.level.material.Material$Builder destroyOnPush()Lnet/minecraft/world/level/material/Material$Builder; # destroyOnPush
public net.minecraft.world.level.material.Material$Builder notPushable()Lnet/minecraft/world/level/material/Material$Builder; # notPushable
public net.minecraft.world.level.material.Material$Builder notSolidBlocking()Lnet/minecraft/world/level/material/Material$Builder; # notSolidBlocking

public net.minecraft.world.phys.BlockHitResult <init>(ZLnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Z)V # <init>

public net.minecraft.world.phys.HitResult location # location

public net.minecraft.world.phys.shapes.VoxelShape shape # shape
public net.minecraft.world.phys.shapes.VoxelShape <init>(Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;)V # <init>
public net.minecraft.world.phys.shapes.VoxelShape getCoords(Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; # getCoords
public net.minecraft.world.phys.shapes.SliceShape getCoords(Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; # getCoords
public net.minecraft.world.phys.shapes.ArrayVoxelShape getCoords(Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; # getCoords
public net.minecraft.world.phys.shapes.CubeVoxelShape getCoords(Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; # getCoords
